name: Deployment to AWS server

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: Pull Request Number
        required: true
        type: number

jobs:
  #====================================================================
  # Validate if the provided PR number is correct.
  # If validation fails, thorw error and fail the deployment workflow
  # If everything is OK, send PR branch name to next step
  #====================================================================
  validate-pr-number:
    name: Validate PR number from input
    runs-on: ubuntu-latest
    outputs:
      pr-branch: ${{steps.get-pull-request.outputs.result}}
    steps:
      - name: Validate PR number
        uses: actions/github-script@v7
        id: get-pull-request
        with:
          result-encoding: string
          script: |
            try {
              const { data: response } = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: ${{ github.event.inputs.pr_number }}, 
              })
              
              if (response.number !== ${{ github.event.inputs.pr_number }}) {
                throw new Error('Provided PR number is invalid.')
              }

              if (response.state !== 'open' || response.mergeable_state === 'blocked') {
                throw new Error('Either the PR is closed or not in the mergeable state.')
              }

              return {
                pr_branch: response.head.ref,
                pr_number: response.number
              }
            } catch (err) {
              console.log(err)
              throw new Error('Error fetching PR details')
            }

  #====================================================================
  # Setup terraform with version 1.9.5
  #====================================================================
  setup-terraform:
    name: Setup terraform
    runs-on: ubuntu-latest
    steps:
      - name: Setup terraform
        id: setup-terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

  #====================================================================
  # Validate terraform
  #====================================================================
  validate-terraform:
    name: Validate Terraform
    runs-on: ubuntu-latest
    needs: [validate-pr-number, setup-terraform]
    steps:
      - name: Echo branch name and terraform version
        run: |
          echo ${{ toJSON(needs.validate-pr-number.outputs) }}
          echo terraform -v
